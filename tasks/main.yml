- name: Prepare directories for shared folders
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ nginx_dir }}/etc/nginx/conf.d"
    - "{{ nginx_dir }}/etc/nginx/ssl"
    - "{{ nginx_dir }}/var/log/nginx"
    - "{{ nginx_dir }}/var/www/html"

- name: Check dhparam key
  stat:
    path: "{{ nginx_dir }}/etc/nginx/ssl/dhparam.pem"
  register: dhparam

- name: Diffie-Hellman parameter for DHE ciphersuites
  shell: "openssl dhparam -out {{nginx_dir}}/etc/nginx/ssl/dhparam.pem {{nginx_openssl_dhparam_numbits}}"
  when: dhparam.stat.exists == false

- name: Setup nginx configs
  template:
    src: "templates/etc/nginx/{{ item }}"
    dest: "{{ nginx_dir }}/etc/nginx/{{ item }}"
  with_items:
    - conf.d/htpasswd
    - conf.d/restricted
  notify:
    - Restart nginx

- name: Setup global nginx config
  template:
    src: "{{ nginx_global_config }}"
    dest: "{{ nginx_dir }}/etc/nginx/nginx.conf"
  notify:
    - Restart nginx

- name: Run nginx server
  docker_container:
    command: "{{ nginx_container_command }}"
    env: "{{ nginx_container_env }}"
    image: "{{ nginx_container_image }}"
    log_driver: "{{ nginx_container_log_driver }}"
    log_options: "{{ nginx_container_log_options }}"
    name: "{{ nginx_container_name }}"
    networks: "{{ nginx_container_networks }}"
    network_mode: "{{ nginx_container_network_mode }}"
    ports: "{{ nginx_container_ports }}"
    pull: "{{ nginx_container_pull }}"
    recreate: "{{ nginx_container_recreate }}"
    restart_policy: "{{ nginx_container_restart_policy }}"
    restart: "{{ nginx_container_restart }}"
    state: "{{ nginx_container_state }}"
    user: root
    volumes: "{{ nginx_container_volumes }} + [
        '{{ nginx_dir }}/etc/nginx/conf.d:/etc/nginx/conf.d:ro',
        '{{ nginx_dir }}/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:ro',
        '{{ nginx_dir }}/etc/nginx/ssl:/etc/nginx/ssl:ro',
        '{{ nginx_dir }}/var/log/nginx:/var/log/nginx',
        '{{ nginx_dir }}/var/www/html:/var/www/html:ro'
      ]"
  when: ansible_facts.virtualization_type != "docker"

- meta: flush_handlers
